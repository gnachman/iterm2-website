2025-01-31: Fixed powerline pdf glyph rendering. PR #513

2025-01-31: Add variable binding for function calls. Issue
5638

2025-01-31: Add builtin function to get tmux formatted
string

2025-01-31: Fix empty cd command when running command from
url in current session. Issue 12142

2025-01-30: Fix misalignment of key bindings tableview.
Issue 12138

2025-01-30: Add debug logging for downloading python runtime

2025-01-30: Turn alternateScreenBidi on by default based on
a comment in issue 12131

2025-01-29: Confirm hotkeys if the keystroke looks like
it'll be problematic

2025-01-28: When copying a session's profile to the shared
profile, remove the session hotkey. Issue 12066

2025-01-28: Order out the advanced GPU settings window.
Issue 12128

2025-01-28: Add debug logging for issue 12013

2025-01-27: Fix support for custom commands when .hushlogin
exists. Issue 12132

2025-01-27: Replace the auto-save window frame after
restoring it to try to prevent the window manager from
setting the window frame based on the auto-save frame
asynchronously after windowWillShowInitial is called. Issue
12130

2025-01-27: Add an advanced pref to allow bidi in alternate
screen mode

2025-01-27: Fix spacing of (recommended for this font)

2025-01-27: Swap fg and bg selection colors in settings UI
since they were mislabeled

2025-01-27: Shell escape directories pasted in from
directories popup. Issue 12136

2025-01-27: Add nicely formatted interval tree of current
session to debug log for issue 8458

2025-01-27: Fix warning

2025-01-26: Add debug logging for issue 8892

2025-01-26: Make usage optional in modern LLM response.
Issue 12134

2025-01-26: Add a way to disable the secure keyboard entry
indicator from its popup message. Issue 7125

2025-01-26: Add debug logging for shell integration
injection

2025-01-26: Revert the fix for issue 12025 because it caused
a bunch of weird behavior hwne activating the app

2025-01-26: Update sponsors

2025-01-26: Fix a bug where the minimap could get out of
sync with the scroller size

2025-01-26: Fix tail find. It often wouldn't run at all
because it could have an out of bounds start position

2025-01-26: Fix debug output of LineBuffer to have correct
abs position

2025-01-22: Don't use timestamp for code signing development
builds

2025-01-22: Bump NMSSH

2025-01-22: Rebuild NMSSH at the correct commit

2025-01-21: Bump shell integration

2025-01-21: Rebuild NMSSH at head

2025-01-21: Add more logging for global hotkey for issue
12066

2025-01-16: Avoid rescheduling the tail find timer when
there is already one

2025-01-16: Don't reorder windows on inactive spaces when
ffm is on and the app is activated. Issue 12074

2025-01-16: Add option to show indicator for non-default
values in settings

2025-01-15: Bump shell integration for issue 12126

2025-01-14: Disable scroll regions when appending a text
document porthole. Issue 12123

2025-01-14: Rewrite crash handling to log reasons for
assertions and preconditions.

This commit replaces every instance of `assert`,
`preconditionFailure`, and `fatalError` with calls to a
custom implementation that logs the crash reason before
terminating the process. Why? Because the geniuses who
designed macOS crash logs thought it would be a swell idea
to exclude the **exact text explaining why the app
crashed**. This informationcritical for diagnosing issues in
productionvanishes into the ether, leaving developers to
piece together clues like digital archaeologists. It is
baffling, enraging, and fundamentally hostile to anyone
trying to maintain a shred of sanity while debugging
real-world software.

The sheer pointlessness of this omission has broken me.
Instead of focusing on meaningful work, Ive wasted precious
minutes of my dwindling time on this odious rock crafting
this grotesque hack to extract and preserve crash reasons.
Ill grant that the system faithfully captures stack traces,
but without context, theyre as helpful as a map without
landmarks. The absurdity of replacing standard language
constructs with bespoke logging functions just to achieve
basic observability is soul-crushing. I dont even have the
energy to write this spittle-flecked rant. It is only
through sheer spite, Prozac, and Jack Daniels that I
summoned the will to make ChatGPT document this travesty.

This entire ordeal has sapped my will to live. Software
development is supposed to be about creating things, solving
problems, and occasionally feeling a sense of pride in what
youve built. Instead, Im left cleaning up after decisions so
inexplicably bad that they defy comprehension. If anyone
from the macOS crash log team stumbles upon this commit: fix
your system. Include the assertion message in your crash
logs. Developers deserve better, and my supply of 'Zac and
Jack is running dangerously low.

2025-01-14: Fix missing method in
iTermModifyOtherKeysMapper1

2025-01-14: Fix a crash when pressing function in modern key
mapper

2025-01-13: Move Toolbelt under View. Move Arrangements into
Window. Commit 12120

2025-01-11: Fix a bug where tail find stopped working after
clearing the buffer. Move tail find logic into its own class
and port to Swift. Issue 12118

2025-01-11: Fix bug in gitlabURLOnPasteboard never returning
nil

2025-01-11: Move items in Window menu into submenus

2025-01-10: Rearrange menu items to make Window menu
smaller. Add Arrangements menu

2025-01-10: Improve gitlab url detection for dev

2025-01-10: Fix a bug in the jobs view that woudln't let you
select a signal if you enter a bogus signal name

2025-01-10: Add support for meta, hyper, and super. Improve
IME support in modern key mapper. Unify representations of
modifiers in modern key mapper. Issue 12111

2025-01-06: Take layer size into account in iTermMetalView

2025-01-06: Improve performance of enormous pastes, such as
when uploading. Issue 12100

2025-01-06: Reenable zoom menu on green button by default.
Let's see if it still crashes a lot

2025-01-06: Always report option for enter, tab, and
backspace regardless of option-as-esc+ setting. Update test
harness to include these tests and various usability
improvements.Issue 12105

2025-01-06: When you close the last tmux tab in a window, we
offer to kill/hide/detach. But it was incorrectly applied to
all tmux tabs in the window, not only those for the session
being closed. Restrict it to the session in question. Issue
12110.

2025-01-04: Add missing unpause when a file download fails.
Issue 12096

2025-01-03: Add a setting to use newline rather than CR in
tmux integration. Issue 11764

2025-01-03: Bump shell integration

2025-01-02: Ensure a timeout is used for requesting
drawables and render pass descriptors in all code paths

2025-01-02: 3.5.12beta1

2025-01-02: Delete logging code from framer.py

2025-01-02: Fix a bug where advanced GPU settings was a
restorable window

2025-01-02: When using tmux integration, use the process
info provider and CPU utilization publisher of the gateway.
This partially addresses issue 12087. Proper process info
caching in tmux remains unsolved

2025-01-02: Disable framer logging

2025-01-01: Prevent folding mutable area in alternate screen
mode through UI

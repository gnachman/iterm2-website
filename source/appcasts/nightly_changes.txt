2024-01-26: Add autoSearch advanced setting. Issue 11312

2024-01-26: Move AI url to advanced setting. Issue 11309

2024-01-26: Improve error and registration handling in
AITerm

2024-01-26: Make AITerm logo a template image

2024-01-26: Remove stray character

2024-01-26: Add a search field to snippet settings. Issue
11168

2024-01-25: Call splitview did resize subviews after
handling doubleclick on divider. Issue 11303

2024-01-25: When you set the search string with cmd-E (even
if Find panel is not open) force a search to be done since
screen contents may have changed. Issue 11302

2024-01-24: Fix compose sequences in key binding emulator.
Issue 11300

2024-01-23: In ssh integration allow downloads of folders.
Issue 11296

2024-01-23: Don't crash if a terminal file download has an
empty name. Issue 11293

2024-01-23: Reload color map when system appearance changes
in minimal theme even if the session view's appearance did
not change. See
https://gitlab.com/gnachman/iterm2/-/issues/11029#note_1712601182

2024-01-23: Change default user agent to Safari so xitter
works

2024-01-23: Add user agent advanced setting. Issue 11290

2024-01-22: Use base64 -d instead of base64 --decode. I
originally used -D which is BSD only. --decode works in GNU
as well, but BSD only supports -d. Issue 11287

2024-01-22: Tweak insets for tab colors menu item in Sonoma

2024-01-22: Rebuild dependencies to get libssh2 1.11.0

2024-01-22: Bump libssh2 submodule to 1.11.0

2024-01-22: Fix retain cycle in iTermProcessInfo because of
lazy var

2024-01-22: Rename preferences to settings all over the
place

2024-01-18: Tolerate missing color that was causing a crash

2024-01-18: Tolerate missing triggers settings in profile
which caused a crash

2024-01-18: Tolerate ScreenCharToStr returning nil

2024-01-18: Try to prevent a crash with nil screenCharArray

2024-01-18: Tolerate missing lines in accessibility helper's
allText to fix crash

2024-01-18: Fix typo (#495)


2024-01-16: Change shortcut for AI to Cmd-Y so we can save
Cmd-B for Leader

2024-01-16: Fix a bug in language-agnostic key bindings
where preexisting keybindings (which did not include a
virtual keycode) failed to work when the setting was
enabled. This also affected factory defaults.

2024-01-16: Update OpenAI api keys URL

2024-01-16: Layout improvements

2024-01-16: Remove 'remove recent profiles from dock menu'
menu item when the feature is disabled

2024-01-15: Fix typo in AI setup (#493)


2024-01-07: Add percent encoding when printing URL from
OpenURL.

2024-01-05: Move shell integration submodule to 3.5 branch.
Base64 encode ssh integration commands. Fix various bugs

2023-12-27: Support opening to line number in Xcode (#490)


2023-12-27: Fix zipping. NSFileCoordinator doesn't seem to
work with symlinks

2023-12-27: Rebuild deps with proper deployment targets

2023-12-27: Update submodules

2023-12-27: Bump submodules

2023-12-27: Move throughput pref to Magic out of GPU prefs.
When not maximizing throughput pause token executor while a
sync is pending. This allows us to easily hit 120 fps. Issue
11277

2023-12-27: Hide terminal contents from codecierge when it
is not visible.

2023-12-27: Tweak max token calculation to include functions

2023-12-27: Use the app's dark mode setting rather than the
view's effective appearance to decide whether to use the
light or dark color suite.

This addresses two problems:

1. If your light-mode suite has a dark background and you've
selected the Minimal theme, then Edit Session opens to the
dark suite and it appears to be broken.  2. If your
light-mode suite has a dark background and your dark-mode
suite has a light background and you've selected the Minimal
theme, then it flashes between the two suites. This is
because, before this commit:

Light suite -> View gets a light appearance -> Amended key
uses the Light suffix -> Dark background color is selected
-> View gets a dark appearance -> Amended key uses the Dark
suffix -> Light background color is selected -> repeat

Now we simply use NSApp.effectiveAppearance to decide which
key suffix to use instead of basing it on the value selected
by the suffix.

2023-12-27: Use only ascii spaces in plain text logs

2023-12-26: Add advanced pref to bounce dock icon when bell
rings

2023-12-26: CSI u mode in profile enables CSI u but *not*
Disambiguate Escapes, which escapes breaking backward
compatibility (e.g., ^C gets escaped). That's for issue
10376. But be careful not to regress issue 10376 where
exiting neovim should leave you in CSI u mode if that's what
your profile specified. The fix for that bug turned on
Disambiguate Escape when the profile specifies CSI u, which
was a step too far.

This commit also adds Disambiguate Escape to the terminal
state menus.

2023-12-26: Fix incorrect bounding box in character source
and incorrect quad for rendering ASCII text that is wider
than the glyph size. This can happen because we introduced
an 'ascii offset' to correct for glyphs with a negative X
offset in their bounding box but didn't increase the size of
the glyph we draw by the same amount. Issue 11267

2023-12-26: Rebuild deps for xcode 15.1

2023-12-23: Fix crash when creating sessions with
Applescript. Issue 11264

2023-12-23: Add context menu to paste history tool. Issue
11259

2023-12-19: Allow `xtermParseColorArgument` to accept
four-digit hex values. Issue 11258 (#492)


2023-12-19: Use round instead of floor for newer baseline
calculation to fix Iosevka for issue 6238. It doesn't seem
to hurt Input Mono Condensed (issue 6159) either.

2023-12-18: Undo showing session name in title after popping
icon name, which was meant to be temporary when the icon
name was set. Issue 11253

2023-12-18: Ensure that iTermController is cleaned up when
the app terminates even if it doesn't get released. Cleaning
up from dealloc is a dumb idea anyway since it might not run
on the main thread. Issue 11220

2023-12-13: Allow turning on smart cursor color for all
cursor styles since they can be changed by a control
sequence. Issue 11249

2023-12-13: Fix a bug where native rendering isn't
immediately visible when GPU rendering is on

2023-12-13: Move non-fullscreen floating hotkey windows
under notification center. Issue 11242

2023-12-11: Remove incorrect smglr from hacked terminfo.
`tabs -2` would output a bogus control sequence.

2023-12-08: Create a new tab in general settings for AI. Add
model selection and max tokens to settings and remove them
from advanced settings. Also, enhance Codecierge with
functions for shell command execution and file writing.

2023-12-07: Turn off recent documents by default

2023-12-07: Minor polish to codecierge

2023-12-07: Give codecierge the ability to run commands
automatically.

2023-12-07: Add Codecierge

2023-12-01: Add Shell>Duplicate window. Issue 11238

2025-05-28: Remove stylistic sets from the font when
extracting it from the profile to ensure they are only
available when ligatures are enabled. Issue 12288

2025-05-28: Select the default profile when opening settings

2025-05-28: Add profile settings to automatically turn on
alternate mouse scroll and to restrict it to vertical scroll
events. Issue 11476

2025-05-28: Move bidi and ssh integration for URLs into
general settings in a new Experimental section

2025-05-28: Rebuild libsixel. Cherry pick code changes from
libsixel/libsixel but exclude build system changes because
meson is preposterously complex for my needs.

2025-05-27: Add support for double clicking a titlebar
filling the screen, a new feature in macOS 15. SEe
https://github.com/gnachman/iTerm2/pull/517

2025-05-27: Add advanced pref for characters considered part
of a filename. Add $ and @ to it

2025-05-27: Invalidate timestamp renderer's cache when
configuration (color, cell size, etc) changes and also draw
timestamp backgrouns before all foregrounds. See comment on
commit
https://github.com/gnachman/iTerm2/commit/593da88c1707169523df2f6e8907092f4eb7728d#commitcomment-155571095

2025-05-27: Avoid using PathSniffer when the range to search
is really big. Issue 12255

2025-05-27: Add send text semantic history action

2025-05-27: Add debug logging for hotkey registration

2025-05-27: Let xcode party on a xib file

2025-05-27: Allow changing logging date format without
restarting. Issue 12278

2025-05-27: Give it2dl the ability to download directories.
Issue 12277. Also use utf-8 for filenames.

2025-05-26: Make regex visualization respond to dark mode
changes

2025-05-26: Add advanced settings to disable
right-justification and paragraph direction detection for
rtl text. Issue 12280

2025-05-26: Add Bypass Terminal key action. It allows the
event to go to cocoa but it won't ever go to a terminal
window. Issue 12273

2025-05-26: Remove dead code

2025-05-26: Fix a bug in changing smart selection precision

2025-05-26: Fix linking librailroad_dsl

2025-05-25: Add more flowchart images

2025-05-25: Add railroad dsl submodule, flowchart images

2025-05-25: Add librailroad_dsl binary

2025-05-25: Add regex visualization to triggers settings

2025-05-25: Revamp smart selection settings UI

2025-05-24: Ensure searchable combo list views don't scroll
horizontally

2025-05-23: Add support for stemming to settings search.
Also add support for literal search by quoting words or
phrases.

2025-05-23: Fix three finger drag when three-finger tap
emulates middle mouse button is enabled. Issue 12293

2025-05-23: Make the AI Tokens field editable. I hate number
formatters in cocoa.

2025-05-23: Add context menu in settings for textfields to
restore default

2025-05-23: Fix wrong caching of terminal button icons in
GPU renderer that made fold/unfold look the same

2025-05-22: Fix a bug where selecting a script based title
provider didn't work. Issue 12297

2025-05-22: Rebuild SwiftyMarkdown

2025-05-21: Update swiftymarkdown submodule to origin/master

2025-05-20: Fix various problems with HowToBuild. Sparkle
was not buildable because some recent version of xcode
dropped support for ancient deployment targets. Various
xcodebuild commands assumed that the configuration build dir
was the weird ./Build folder, so change those to specify it.
Use homebrew cmake rather than /usr/local/bin (which worked
because I had an x86_64 binary there). Issue 12239

2025-05-19: Remove unused prompt marks in auto composer
mode. Works around an issue with fish leaving stray marks.
Issue 12240

2025-05-19: Fix bugs with fold/unfold and auto composer

2025-05-19: Don't create two prompt marks in a row. THis is
an issue with fish when using shell integration because it
sends OSC 7. Issue 12240

2025-05-19: Add click to set instructions on image well

2025-05-19: Add a notice that Use Transparency can override
a profile's transparency setting in the prefs UI. Issue
12181

2025-05-19: Prevent pasting rich text into codecierge goal
view. Issue 12244

2025-05-19: Improve logging in TmuxGateway

2025-05-19: Fix some bugs in the multicursor textview

2025-05-15: Use the control accent color to highlight
non-default controls

2025-05-15: Add tooltips to terminal buttons. Issue 12248

2025-05-15: Improve layout of command info panel

2025-05-15: Add tooltips for command info view

2025-05-15: Fix reattaching to tmux integration on restore

2025-05-15: Add relative timestamps. Issue 12257

2025-05-15: Fix path sniffer calling back on the wrong queue

2025-05-15: Fix unlimited scrollback bug with gang append

2025-05-14: Really, truly update the libsixel module

2025-05-14: Add unordered_dense

2025-05-14: Fix HLS to RGB conversion in libsixel

2025-05-14: Add option to hide cursor when unfocused. Issue
12251

2025-05-14: Bump libsixel. Submodules still mystify me
sometimes. The previous commit should have done it right,
but it didn't

2025-05-14: Fix various pathmark bugs including a hang.
Issue 12253

2025-05-14: Dedup window resize requests. Always refresh
after sync. Issue 12243

2025-05-14: Fix a bug that broke downloads

2025-05-14: Add deepseek model

2025-05-13: Optimize appending ASCII text. Bypass the grid
and go straight to linebuffer. Combine adjacent ASCII/CR/LF
tokens for faster batch processing. Increase queue depth.
For individual commits see the `gang` branch.

2025-05-10: Add ModernTests/VT100ScreenTests.swift

2025-05-10: Fix a bug in getting the coordinate of a
location at the end of a non-empty line at the end of a
LineBlock. Add a bunch of unit tests

2025-05-10: Fix a bug in edit triggers where focus got
pulled away from the text field you were editing

2025-05-10: Fix some bugs in content navigation and allow
multi-letter shortcuts. Issue 12261

2025-05-10: Fix vertical alignment issue in triggers panel

2025-05-08: Add debug logging for cursor animation

2025-05-08: Fix bugs in modifying blockID lists

2025-05-08: Add option to not send return after password.
Issue 11443

2025-05-08: Don't show trigger slowness warning if there are
no triggers. Expectations could cause this too. See comment
here:
https://gitlab.com/gnachman/iterm2/-/wikis/Slow-Triggers#note_2480967241

2025-05-07: fix: Python examples doc line break (#515)


2025-05-07: Bump python API version (#516)


2025-05-07: Include CR and LF alongside ascii tokens for
better performance

2025-05-07: Fix a bug where the background color of the last
column was rendered wrong in legacy renderer

2025-05-07: Remove iTermString from the hot path. Sigh

2025-05-07: Encode/decode iTermString

2025-05-07: Fix failing tests

2025-05-07: Make iTermLineString use metadata for rtlFound
and timestamp, which is faster

2025-05-07: Many optimizations

2025-05-07: Start reducing the use of screen_char_t arrays

2025-05-07: Fix data race in CopyOnWrite

2025-05-07: Add more tests

2025-05-07: Finish initial writing of line block tests

2025-05-07: Add VT100Grid tests

2025-05-07: More cleanup, add iTermBaseString

2025-05-07: Crash on oob test

2025-05-07: Test all the things

2025-05-07: Brute force prototype of udpating line block to
use fancy strings

2025-05-07: Rename iTermMutableString to iTermMutableRope

2025-05-07: Fix all the places I could find where we use
line[width] for the continuation character

2025-05-07: Fix various bugs in filter Ensure ropes don't
have mutable strings in their segments Fix some SCAs that
were expected to have trailing continuation marks Fix bug in
iTermUniformString.usedLength not doing the right thing for
nulls Fix wrong end-Y coord in convertPositions when using
expanded result ranges.  Batch up filter updates for better
performance.  Fix a bug in token executor. puase would only
pause one executor. I added a global pause for all executors
and simplified how whilePaused works. Also put a limit on
how long it will blcok when maximize throughput is on.  Add
appendOptimizedStringAtCursor to VT100Grid Don't prepopulate
screen chars in ascii VT100Token.  Fix nullabillity bug in
external attributes that caused spurious blocks.

2025-05-07: Add assertions, fix a few bugs

2025-05-07: Add VT100ByteStreamConsumer

2025-05-07: Introduce VT100ByteStream

2025-05-07: Use NSData in PTYTask reading

2025-05-07: CHeckpoint

2025-05-07: Initial effort at avoiding screen_char_t
encoding

2025-05-07: Add isDefault and isEmpty to the external
attribute index

2025-05-07: Improve test for validity of schemes to avoid
annoying objc exceptions

2025-04-24: Add missing files

2025-04-24: Fix wrong splitting of metadat when popping from
LineBlock

2025-04-24: Fix wrong secondary controls in edit key binding
UI for variuos actions

2025-04-16: Accept non-US characters for path extraction

2025-04-16: Fix buffer underrun in PathExtractor. Issue
12249

2025-04-16: ESC to close open quickly window. Issue 12250.
Also fix menu item icon

2025-04-16: Fix a visual bug when selecting half of a
double-width character. Issue 12252

2025-04-16: Add secure user default for open URL hostname
storage

2025-04-16: Begin implementation of channels, a minimal
terminal multiplexer

2025-04-13: Add setting to gate navigator. Wait for double
click timeout before opening it.

2025-04-13: In composer, set command color depending on its
validity based on searching $PATH

2025-04-12: If you click on a path in the prompt, open a
window showing subdirectories.

2025-04-10: Fix crash when retrying python runtime download

2025-04-09: Add a brittle hack (because that is all Apple
gives us) to detect the accent menu so it is not behind
hotkey windows when open. Issue 7443

2025-04-08: Modernize the appearance of announcements

2025-04-08: Detect DEC 2048 reports echoing back and offer
to turn them off. Generalize the mechanism already used by
mouse reporting

2025-04-07: Turn off DEC 2048 when host changes. Issue 12225

2025-04-07: Don't use filesystems that ignore permissions
for secure user defaults

2025-04-07: Add advanced pref to require option for dragging
split panes by their title bars. issue 12224

2025-04-07: Fix a crash when user defaults contains the
wrong type for something that we expected to be a number.
Try to not break existing configs that worked by accident.

2025-04-05: Move tab and split pane menu items into submenus
under window

2025-04-05: Move next/previous tab into Select Tab submenu

2025-04-05: Give the main menu a chance to handle key
equivalents before PTYTextView. This fixes breaking menu
tiling shortcuts in 3.5.12.

2025-04-05: Update triggers UI. Add a name property to
triggers.

2025-04-03: Fix moving selection to previous mark

2025-04-02: Ensure filesystem where secure user defaults are
stored supports unix permissions. Issue 12162

2025-04-02: Misc fixes, delete dead code

2025-04-02: Add copy mode key binding action

2025-04-02: Remove wrong displayName for automatic logging

2025-04-01: Don't let resize announcements pile up

2025-04-01: Log when the dock icon is clicked

2025-04-01: Bump shell integration

2025-04-01: Allow customizing SSH path

2025-04-01: Add CommandSelectionHelp.md

2025-04-01: Add debug logging for command buttons

2025-04-01: Fix remote for openssl to be my fork, which has
a patch to fix building on ARM

2025-04-01: Add debug logging for secure user defaults

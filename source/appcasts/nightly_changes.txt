2025-09-02: Add welcome page

2025-09-02: Browser onboarding

2025-09-02: Make audio detection more robust

2025-09-02: Add claude rules

2025-09-02: Rebuild character set data for current unicode

2025-09-02: Don't access trigger histograms from main thread

2025-09-02: Make 'remember frames' a first class citizen for
issue 12395

2025-09-02: Remove some incomprehensible logic that dates
back to 2009 (commit ed38bb49b in the old-iterm repo) that
tweaked the Y origin of windows whose frames were saved by
the difference in height between the default frame and then
restored frame. That code was ported over but I never
understood the rationale, and after staring at it for a
while I still don't understand it. Perhaps it was to hack
around some bug in an earlyish version of macOS? If you're
gonna save frames, you should restore them as they were
saved is the new rationale, so at least there is one now.
This was inspired by issue 12395 but it doesn't fix their
problem, which is that auto frame restoration surprisingly
causes the desired size in the profile to be ignored
sometimes. I have never loved auto frame restoration for
this reason but I am reluctant to eliminate it because I'm
sure some people expect it to continue working as it always
has.

2025-09-01: Update unicode building scripts

2025-08-28: Ensure Conductor callbacks never get run more
than once

2025-08-28: Show performance stats for triggers in Edit
Session

2025-08-27: Fix warning

2025-08-27: Ensure out-of-selected-command-range search
results are not used. This can happen on findNext which
searches forwards, and the algorithm in LineBuffer is not
prepared to exclude those results. At some point I need to
fix it in LineBuffer which will be more efficient but I
haven't the time now

2025-08-27: Show a warning in dropdown find view that search
is restricted to a line range. Issue 12388

2025-08-27: Fix a bug where navigating to a split pane by
numeric shortcut did not make it visible when another pane
was maximized. Issue 12389

2025-08-26: Improve help text for key binding actions that
are perenially confusing. Fix a bug where the help button
was clipped. Issue 6394

2025-08-26: Provide detailed stats on trigger performance
when they are detected to be slow.

2025-08-20: Automatically 'keep both' for browser downloads
because webkit cancels the download if the destination
exists.

2025-08-19: Use ssh save panel for exporting special
exceptions

2025-08-19: Use ssh save panel for export snippets

2025-08-19: Use ssh save panel for export actions

2025-08-19: Use ssh save panel for exporting color presets

2025-08-19: Make keybinding export use the new panel. Ensure
we use the fallback version everywhere

2025-08-19: Fix various bugs with save panels. Add toggle
show hidden files shortcut. When writing a save item to
localhost don't treat it as an upload. Use ssh save panel
for attributed string saver

2025-08-19: Make save image use ssh save panel. Use upload
instead of replace for ssh panel so it doesn't bog down the
connection

2025-08-19: Port save selection to use my save panel

2025-08-19: Update iTermSavePanel to use the modern save
panel, which allows saving to ssh hosts.

2025-08-18: Use ssh panel for importing snippets

2025-08-18: Use ssh panel for importing actions

2025-08-18: Use ssh panel for import color presets

2025-08-18: Add ssh panel for importing profiles. Change the
panel to have a preferred SSH identity

2025-08-18: Use ssh compatible open panel for importing
keymaps

2025-08-18: Work around an asyncio bug that made framer
commands appear to fail

2025-08-18: Add a couple ssh file panels. Fix bugs in ssh
recovery (commands before reset could have their responses
confused with reset's response, so make reset respond with a
secret code; add a backward compatibility code path for
recovery of existing framers)

2025-08-18: Move a couple places over to the ssh file
picker. Fix a bug where recovered conductors didn't know the
remote home directory. Add support for single selection in
thef ile picker

2025-08-18: Fix wrong column used when saving a chat

2025-08-18: Refactor chat agent. Fix a few bugs. Improve
prompt when a file is attached

2025-08-18: Refactor RemoteCommand

2025-08-17: Add model selector to chat window. Improve
status updates and show reasoning updates

2025-08-16: Fix selection of most recent chat when it is
empty (but contains invisible messages like setting
permissions)

2025-08-16: Add a stop button to ai chat. Fix deleting
messages after editing

2025-08-16: remove find highlights when closing find panel

2025-08-15: Fix named marks bugs.

2025-08-14: Remove adblock rust code and proxy. It's not
practical because it needs a root cert, doesn't actually
know what requests are for, and is 100 megs.

2025-08-14: Load hudsucker_ff with dlopen

2025-08-14: Don't mute audio if a video without an audio
track is playing

2025-08-14: Add multiple selection and undo support to smart
selection actions settings UI

2025-08-14: Revamp smart selection action settings UI

2025-08-14: Fix autofill/pw manager button location. Fix an
issue where CSP prevented find on page highlights from being
visible

2025-08-14: Get action shortcuts working in browser

2025-08-14: Fix test build error

2025-08-14: Reduce logging verbosity

2025-08-14: Reduce logging verbosity and add logs to
scripting console

2025-08-13: Ensure browser sessions don't warn about being
short-lived

2025-08-13: Keep crazy things from happening with Python API
and browser sessions

2025-08-13: Fix iTermSlider's text field when control
editing ends if it is out of bounds

2025-08-13: Make iTermSlider ignore illegal values during
text editing

2025-08-13: Avoid splitting browser sessions to be too small

2025-08-13: Allow http for quicklook

2025-08-13: Fix up responder chain when browser is moved to
own window

2025-08-13: Fix a bug in saving appends to chat message to
db

2025-08-13: Fix base64 pretting printing for when full lines
are selected and endX is 0

2025-08-13: Update onboarding for 3.6

2025-08-13: Add a new setting to disable window resizing
from inactive sessions, which defaults to on. Mitigates an
nvim bug when there are two nvims in different tabs and they
get into a window resizing loop. Issue 12324

2025-08-12: Revamp graph discovery and find on page. Add
editing detector.

2025-08-11: Fix time travel in AI conversations for
Responses API, which uses responseID rather than re-sending
the whole conversation

2025-08-11: Enable snippets filter in settings for web
profiles

2025-08-11: Search recent visits for open quickly. Make
migrations happen in transactions. Reduce logging verbosity

2025-08-11: ARCify iTermController to fix a leak of sessions

2025-08-11: Reduce composer log level

2025-08-11: Add iterm2-ssh URLs that let you view files
hosted on a host you are SSHed to with SSH integration

2025-08-11: Password manager improvements for browser

2025-08-11: Remove print statement

2025-08-11: Fix bugs in JSONSchema with nested types and
arrays

2025-08-09: Use a separate password manager instance for the
browser

2025-08-09: Fix leftover debug code

2025-08-09: Quiet some very loud logging

2025-08-09: Add advanced setting to avoid shrinking tmux
windows by less than one cell. Issue 9480

2025-08-09: refactor fitWindowToTabSize:preferredHeight:

2025-08-08: Allow filtering on regexes. Fix a bug where a
divorced synthetic session had the same guid as its live
session, causing a crash if you open Edit Session on the
synthetic one. Issue 12367

2025-08-08: Make it possible to forget the 'open links
in-app' setting. Issue 12368

2025-08-08: Add title to tab in applescript. shh don't tell
anyone I don't want to support applescript

2025-08-08: Fix typo. Issue 12372

2025-08-08: Make AI timeout configurable. Issue 12374

2025-08-08: Add setting to wrap dropped file names in double
quotes. Issue 12375

2025-08-08: Hide browser profiles and refuse to enter
browser mode when browser profiles are disabled

2025-08-08: Add GPT 5 models

2025-08-08: Fix a bug where spacebar stopped working after
instant replay of browser

2025-08-07: Hide certain tools from the toolbelt when the
current session is a browser since they don't make sense

2025-08-07: Support 'clear instant replay' in browser

2025-08-07: PRevent filter. Fix crash on set mark in browser

2025-08-07: Disable convert match to selection in browser
since it can't have multiple selections

2025-08-07: Fix cmd-e in browser

2025-08-07: Get navigation shortcuts working in browser

2025-08-07: Make console.debug work

2025-08-07: Fix bug with text nodes that have block siblings
not being searchable

2025-08-07: Fix some idiotic signing issue

2025-08-07: Don't add copy button until it is needed

2025-08-07: Don't add copy mode cursor before copy mode is
used

2025-08-07: Fix find on page to work with frames

2025-08-05: delete dead code

2025-08-05: Move reader mode into defaultClient

2025-08-05: Move local pages into page contentworld and
unregister them on navigation

2025-08-05: Improve find on page to handle css defined
blocks and include the root element as a block

2025-08-05: Improve favicon support to handle scalable and
dark/light mode

2025-08-05: Fix a bug where there could be an out of date
favicon

2025-08-05: Fix when two webviews have the same
configuration

2025-08-05: Always leave room for favicon in url bar. Never
leave double room

2025-08-04: Fix wrong left inset of text in urlbar

2025-08-04: Fix wrong size icon in minimal fake titlebar

2025-08-04: Fix layout issues in toolbar

2025-08-04: Fix light/dark mode for url bar

2025-08-04: Update code to use SF symbols enums

2025-08-04: Fix some bugs in SFSymbolEnum

2025-08-04: Add SFSymbolEnum

2025-08-04: Show indicators in web toolbar

2025-08-04: Move web menu to be after session instead of
after Window

2025-08-04: Drop intermediate searches

2025-08-04: Hide search results when closing find panel

2025-08-04: Mute audio automatically

2025-08-04: Move as much as possible into defaultClient
world. Remove unneeded availability annotations

2025-08-04: Fix vertical alignment of url text field

2025-08-03: Rework how browser triggers function. Add
hyperlink trigger. Update UI

2025-08-03: Add browser highlight trigger. Fix bugs in add
trigger vc.

2025-08-03: Add trigger support for browser

2025-08-02: Store match type in trigger dict and fix UI bugs

2025-08-02: Rewrite add triggers to not use xib

2025-08-02: Fix bury for browsers

2025-08-02: Place popups on the bottom center of browser
window

2025-08-02: Add support for autofill menu item in browser

2025-08-02: Disable coprocess menu item for browers session

2025-08-02: Instant replay for web browser

2025-08-01: Disable more menu items that are nonsense in the
browser

2025-08-01: Disable menu items that don't make sense in
browser

2025-08-01: Jump to selection in browser

2025-08-01: Copy mode in browser

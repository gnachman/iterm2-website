2025-01-29: Confirm hotkeys if the keystroke looks like
it'll be problematic

2025-01-28: When copying a session's profile to the shared
profile, remove the session hotkey. Issue 12066

2025-01-28: Order out the advanced GPU settings window.
Issue 12128

2025-01-28: Add debug logging for issue 12013

2025-01-27: Fix support for custom commands when .hushlogin
exists. Issue 12132

2025-01-27: Replace the auto-save window frame after
restoring it to try to prevent the window manager from
setting the window frame based on the auto-save frame
asynchronously after windowWillShowInitial is called. Issue
12130

2025-01-27: Add an advanced pref to allow bidi in alternate
screen mode

2025-01-27: Fix spacing of (recommended for this font)

2025-01-27: Swap fg and bg selection colors in settings UI
since they were mislabeled

2025-01-27: Shell escape directories pasted in from
directories popup. Issue 12136

2025-01-27: Add nicely formatted interval tree of current
session to debug log for issue 8458

2025-01-27: Fix warning

2025-01-26: Add debug logging for issue 8892

2025-01-26: Make usage optional in modern LLM response.
Issue 12134

2025-01-26: Add a way to disable the secure keyboard entry
indicator from its popup message. Issue 7125

2025-01-26: Add debug logging for shell integration
injection

2025-01-26: Revert the fix for issue 12025 because it caused
a bunch of weird behavior hwne activating the app

2025-01-26: Update sponsors

2025-01-26: Fix a bug where the minimap could get out of
sync with the scroller size

2025-01-26: Fix tail find. It often wouldn't run at all
because it could have an out of bounds start position

2025-01-26: Fix debug output of LineBuffer to have correct
abs position

2025-01-22: Don't use timestamp for code signing development
builds

2025-01-22: Bump NMSSH

2025-01-22: Rebuild NMSSH at the correct commit

2025-01-21: Bump shell integration

2025-01-21: Rebuild NMSSH at head

2025-01-21: Add more logging for global hotkey for issue
12066

2025-01-16: Avoid rescheduling the tail find timer when
there is already one

2025-01-16: Don't reorder windows on inactive spaces when
ffm is on and the app is activated. Issue 12074

2025-01-16: Add option to show indicator for non-default
values in settings

2025-01-15: Bump shell integration for issue 12126

2025-01-14: Disable scroll regions when appending a text
document porthole. Issue 12123

2025-01-14: Rewrite crash handling to log reasons for
assertions and preconditions.

This commit replaces every instance of `assert`,
`preconditionFailure`, and `fatalError` with calls to a
custom implementation that logs the crash reason before
terminating the process. Why? Because the geniuses who
designed macOS crash logs thought it would be a swell idea
to exclude the **exact text explaining why the app
crashed**. This informationcritical for diagnosing issues in
productionvanishes into the ether, leaving developers to
piece together clues like digital archaeologists. It is
baffling, enraging, and fundamentally hostile to anyone
trying to maintain a shred of sanity while debugging
real-world software.

The sheer pointlessness of this omission has broken me.
Instead of focusing on meaningful work, Ive wasted precious
minutes of my dwindling time on this odious rock crafting
this grotesque hack to extract and preserve crash reasons.
Ill grant that the system faithfully captures stack traces,
but without context, theyre as helpful as a map without
landmarks. The absurdity of replacing standard language
constructs with bespoke logging functions just to achieve
basic observability is soul-crushing. I dont even have the
energy to write this spittle-flecked rant. It is only
through sheer spite, Prozac, and Jack Daniels that I
summoned the will to make ChatGPT document this travesty.

This entire ordeal has sapped my will to live. Software
development is supposed to be about creating things, solving
problems, and occasionally feeling a sense of pride in what
youve built. Instead, Im left cleaning up after decisions so
inexplicably bad that they defy comprehension. If anyone
from the macOS crash log team stumbles upon this commit: fix
your system. Include the assertion message in your crash
logs. Developers deserve better, and my supply of 'Zac and
Jack is running dangerously low.

2025-01-14: Fix missing method in
iTermModifyOtherKeysMapper1

2025-01-14: Fix a crash when pressing function in modern key
mapper

2025-01-13: Move Toolbelt under View. Move Arrangements into
Window. Commit 12120

2025-01-11: Fix a bug where tail find stopped working after
clearing the buffer. Move tail find logic into its own class
and port to Swift. Issue 12118

2025-01-11: Fix bug in gitlabURLOnPasteboard never returning
nil

2025-01-11: Move items in Window menu into submenus

2025-01-10: Rearrange menu items to make Window menu
smaller. Add Arrangements menu

2025-01-10: Improve gitlab url detection for dev

2025-01-10: Fix a bug in the jobs view that woudln't let you
select a signal if you enter a bogus signal name

2025-01-10: Add support for meta, hyper, and super. Improve
IME support in modern key mapper. Unify representations of
modifiers in modern key mapper. Issue 12111

2025-01-06: Take layer size into account in iTermMetalView

2025-01-06: Improve performance of enormous pastes, such as
when uploading. Issue 12100

2025-01-06: Reenable zoom menu on green button by default.
Let's see if it still crashes a lot

2025-01-06: Always report option for enter, tab, and
backspace regardless of option-as-esc+ setting. Update test
harness to include these tests and various usability
improvements.Issue 12105

2025-01-06: When you close the last tmux tab in a window, we
offer to kill/hide/detach. But it was incorrectly applied to
all tmux tabs in the window, not only those for the session
being closed. Restrict it to the session in question. Issue
12110.

2025-01-04: Add missing unpause when a file download fails.
Issue 12096

2025-01-03: Add a setting to use newline rather than CR in
tmux integration. Issue 11764

2025-01-03: Bump shell integration

2025-01-02: Ensure a timeout is used for requesting
drawables and render pass descriptors in all code paths

2025-01-02: 3.5.12beta1

2025-01-02: Delete logging code from framer.py

2025-01-02: Fix a bug where advanced GPU settings was a
restorable window

2025-01-02: When using tmux integration, use the process
info provider and CPU utilization publisher of the gateway.
This partially addresses issue 12087. Proper process info
caching in tmux remains unsolved

2025-01-02: Disable framer logging

2025-01-01: Prevent folding mutable area in alternate screen
mode through UI

2024-12-31: Don't allow fold triggers in interactive apps

2024-12-31: Log process type change notif

2024-12-31: If the browser bundle ID is empty don't call
URLForApplicationWithBundleIdentifier since it'll do
something random.  Issue 12079

2024-12-31: Allow saving setting for keep both/replace when
downloading a file. Issue 12089

2024-12-31: Add SetNamedMark trigger and FoldTrigger. Issue
11346

2024-12-31: Optimize measuring length of timestamps. Issue
12084

2024-12-30: Fix a crash when divorcing a dynamic profile.
Issue 12081

2024-12-30: Improve appearance of tag list in
ProfileListView

2024-12-30: Bludgeon accessibility into working for tip of
the day. It kind of works.

2024-12-30: Fix dark mode for tip of the day

2024-12-30: Allow repeated modifier+return/tab/backspace in
disambiguate escape mode. I'm not sure why repeat got
special treatment in the original code. Issue 12069

2024-12-30: Restore accidentally deleted
applicationWillResignActive, which broke state restoration

2024-12-28: Implement a timeout when getting the next
drawable. Issue 12073

2024-12-28: Fix a bug where the drawable was half size on a
nonretina display when the main display is retina

2024-12-27: Replace MTKView with iTermMetalView, a direct
port

2024-12-18: Add option to restrict mouse reporting to
alternate screen mode (and fix a few stray bugs). Issue
12076

2024-12-18: Improvements to colors settings

2024-12-18: Tweaks for color settings

2024-12-18: Improve layout of appearance panes settings

2024-12-18: Improve layout of apperance tabs settings

2024-12-18: Improve layout of windows appearance settings

2024-12-18: Improve services settings, move bonjour to magic

2024-12-18: Update layout of services settings

2024-12-18: Update layout of ai settings

2024-12-18: Update layout of magic settings

2024-12-18: Update layout of tmux settings

2024-12-18: Improve layout of settings prefs

2024-12-18: Improve layout of window prefs

2024-12-18: Improve layout of selection prefs

2024-12-18: Improve layout of pointer prefs

2024-12-18: Tweak hotkey settings

2024-12-18: Update layout of advanced profile settings

2024-12-18: Redo l yaout of profiles keys settings

2024-12-18: Fix layout of session settings

2024-12-18: Improve layout of Window settings

2024-12-18: Fix alignment of fonts in settings

2024-12-18: Update layout of profiles colors

2024-12-18: Relayout profiles general settings

2024-12-18: Relayout terminal settings

2024-12-18: Relayout text and terminal profiles settings

2024-12-17: Refine bad leader key detection

2024-12-17: Warn when you pick a bad leader. Issue 12062

2024-12-17: Make large composer vertically draggable. Issue
12061

2024-12-17: After programatically scrolling ignore
subsequent momentum scroll events

2024-12-17: Prompt to disconnect from unresponsive tmux
after a close command is sent, even if tmux is not currently
detected as unresponsive. Issue 12050

2024-12-16: Fix a bug where the offset of a wrapped line was
computed incorrectly when double-width characters are in the
block but not on the raw line. Issue 12038

2024-12-16: Try to prevent crash when drawing a text clip.
Issue 12057

2024-12-16: Fix a bug where the wrong hash algorithm was
named in the known-host dialog. Issue 12049

2024-12-16: Fix a crash when resizing because marks' prompt
and command ranges could be bogus, causing oob access to
line

2024-12-16: Remove assertion that isn't really needed. Issue
12048

2024-12-16: Indicate the the AI key is stored in the
keychain

2024-12-16: Fix memory leak in metalGetGlyphKeysData (#512)

https://gitlab.com/gnachman/iterm2/-/issues/12029
2024-12-16: Use core text when font has contextual
attributes. This makes Monaspace work by default.

2024-12-16: Add option to animate cursor movement. Issue
9627

2024-12-16: Remove stray quotes from option-delete key
preset in natural text editing. Issue 12031

2024-12-16: Log hex dumps of messages from multiserver

2024-12-16: Fix a bug where the menu items in the status
bar's find component's menu were disabled and had the wrong
state. Issue 12026

2024-12-16: Preserve window order when app is activated and
focus follows mouse is on. Issue 12025

2024-12-15: Make browser for opening URLs configurable in
advanced settings. Add support for string secure advanced
settings. Issue 12020

2024-12-15: Remove function call support from O1

2024-12-15: Fix AI support for o1 models

2024-12-15: Add Session > Change Profile in Arrangement.
Issue 12015

2024-12-14: Make the profile command text field expandable.
Issue 12009

2024-12-12: Fix various bugs in rewriting dynamic profiles.
The name was sometimes not written and changing Use Separate
Colors In Light/Dark Mode didn't work. We didn't always
write the key back which could cause colors to change
unexpectedly. Issue 11999

2024-12-09: Fix wrong default match color in dark mode

2024-12-09: Try to improve how empty lines at the end are
handled by accessibility

2024-12-09: Improve it_sanitize

2024-12-07: Set app's appearance when theme is light or
dark. Issue 12042

2024-12-07: Fix a bug where keydown events were ignored
improperly, breaking nvim. Issue 12006

2024-12-06: Be more aggressive about handling keys in
performKeyEquivalent. Fixes a bug where control arrow key
didn't send anything with the standard key mapper

2024-12-06: Update Terminal.app compatibility presets. Issue
12036

2024-12-05: Add rmxx and smxx to terminfo. Issue 12041

2024-12-04: Fix filter field in status bar. Issue 11993.

Also:

- Fix the color of the filter field in status bar - Remove
bogus assertion - Fix color of Find in status bar changing
when opening filter

2024-12-04: Add a ligature blacklist exception for
MonacoLigaturizedNFM. Issue 11986.

2024-12-03: Bump NMSSH

2024-12-03: Add trigger sharing. Allow multiple
selection/deletion in triggers panel. Issue 19978

2024-12-03: Fix a bug where performNaturalLanguageQuery
didn't work when using a status bar composer. Add better
interfaces to composer manager. Make AI from command info
always use the large composer since it always produces two
lines and doesn't work well with the status bar composer.
Issue 11991

2023-12-13: Allow turning on smart cursor color for all
cursor styles since they can be changed by a control
sequence. Issue 11249

2023-12-13: Fix a bug where native rendering isn't
immediately visible when GPU rendering is on

2023-12-13: Move non-fullscreen floating hotkey windows
under notification center. Issue 11242

2023-12-11: Remove incorrect smglr from hacked terminfo.
`tabs -2` would output a bogus control sequence.

2023-12-08: Create a new tab in general settings for AI. Add
model selection and max tokens to settings and remove them
from advanced settings. Also, enhance Codecierge with
functions for shell command execution and file writing.

2023-12-07: Turn off recent documents by default

2023-12-07: Minor polish to codecierge

2023-12-07: Give codecierge the ability to run commands
automatically.

2023-12-07: Add Codecierge

2023-12-01: Add Shell>Duplicate window. Issue 11238

2023-11-29: Add antialiased to MetalGlyphKey so that when
you change the non-ascii antialiased flag we're forced to
build new textures. Issue 11235

2023-11-29: Don't call PTYTextView.setNeedsDisplay because
it's always the legacy view or metal view that needs
display. This improves performance when a porthole is
present.

2023-11-29: Don't alpha-out PTYTextView when a porthole or
annotation is visible. Enable metal in this case.

2023-11-28: Fix a bug in accessibility screen coords where
the Y value increases as it goes down and y=0 is the top of
the main screen. Whoever did this should feel bad about
themselves. Issue 11191

2023-11-28: Remove stray characters

2023-11-28: Make tip of the day draggable. Issue 11232

2023-11-28: Fix bug where switching panes didn't force a
redraw in legacy renderer. Issue 11214

2023-11-27: Add forgotten VSCode Insiders -click open
handling (#491)

The bundle identifiers for both VSCode and VSCode Insiders
(beta builds) were already present but only the VSCode
non-Insiders was used in the -click open logic. This adds
the Insiders bundle ID to be handled the same way as
standard VSCode.  2023-11-27: When a hotkey window rolls out
restore the previously active app only if it was rolled out
because of a keypress. Issue 11136

2023-11-26: Don't crash when using an uninitialized colormap

2023-11-26: Remove recents if a .itermtab file somehow ends
up in it. Issue 11198

2023-11-26: Fix release_stable to put 10.15 instead of 10.14
in summary

2023-11-26: Fix wrong log line

2023-11-25: Remove stray character

2023-11-25: Fix spacing in terminal prefs

2023-11-25: Add a preference to disable selection scroll in
alternate screen mode. Issue 11219

2023-11-25: Remove an apparently unnecessary dispatch_async
when updating transparency that caused a flash in issue
11175

2023-11-24: Fix checking python version in ssh. For some
reason running the command as $* gives strange output on my
Linux host.

Simplify how CPU utilization is distributed. There was a bug
where routers ended up with too many consumers. I never
really got to the bottom of it because it was just
architected badly.

iTermLocalCPUUtilizationPublisher is now responsible for
publishing local CPU usage. It goes to each
iTermCPUUtilization which distributes it to routers and then
to consumers. SSH-based values from from the SSH process
info provider, which takes a similar role to
iTermLocalCPUUtilizationPublisher.

When the underlying publisher changes, the status bar
component restarts its drawing state.

Also avoid drawing when there is no window.

Issue 11216

2023-11-21: Generalize sponsors code. Fix mouseover bug for
whitebox

2023-11-20: Fix under-retain that lived for over a decade.
Issue 11205

2023-11-20: Redraw tab when active session changes. Issue
11214

2023-11-20: Fix the underline color for attributed strings
to be the same as for fastpath strings. Issue 10681

2023-11-20: Add Whitebox sponsor

2023-11-20: Fix disclosable view accessories in alerts.
Issue 11209

2023-11-16: Fix leak of server-originated messages

2023-11-16: Ignore distclean failure

2023-11-15: Make Window>Arrange spit panes preserve
horizontality of splits in common cases. Issue 11204

2023-11-14: Bump shell integration for issue 11193

2023-11-14: Xcode 15.0.1

2023-11-13: Xcode 15.0.1

2023-11-13: Fix crash when synchronized find pasteboards are
off and there is no local value.

2023-11-13: Optimize removing from interval tree.

https://gitlab.com/gnachman/iterm2/-/issues/10934#note_1578358600

2023-11-12: Exclude loopback interfaces in network status
bar component. Issue 11170

2023-11-08: Fix bug where job name in jobs tool overlapped
the pid column

2023-11-08: Add IntelliJ UE to semantic history. Issue 11171

2023-11-06: Support detecting prompt with trigger but using
finalterm codes b,c,d otherwise. Issue 10537

2023-11-05: Cmd-click on prompt to open command info. Issue
11163

2023-11-04: Fix off by one error in offscreen command line.
Don't draw it when scrolled all the way up. Issue 11179

2023-11-04: Add iterm2.get_profile_property(key:) BIF. Issue
11178

2023-11-04: Check homebrew for op. Issue 11180

2023-11-03: Add 'move session to tab' to context menu. Issue
11181

2023-11-03: Enable autolaunch folder in file picker to
export script. Issue 8913

2023-11-02: Add invoke function to open quickly. Issue 11190

2023-11-02: Switch release_beta and release_stable to use
notarytool

2023-11-02: Change nightly.sh to use notarytool

2023-11-02: Don't allow blocks in alternate screen mode.
Update the cached block ID->location map when resizing

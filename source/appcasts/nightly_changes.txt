2025-09-28: Tweak info.plist for web tech

2025-09-28: Revert "Fix lookups of profile row and columns
that don't fall back to default values"

This reverts commit
7829c74d5ed2990654fab63e3bfbe06395107d68.

2025-09-28: Turn off auto save frame support by default.
Issue 12426

2025-09-28: Add debug-build-only hacks for macOS 26.0 only
to prevent constraint failure exception when opening
settings. Just for fun I submitted a feedback. FB20421695

2025-09-28: Tweak position of unsaved user defaults view for
Tahoe

2025-09-27: Fix handling of kitty images with
transmitAndDisplay followed by more transmit chunks. Issue
12483

2025-09-27: Offer to open files in the in-app browser if we
can handle them

2025-09-27: Use async alerts to work around Tahoe bug

2025-09-27: Reduce the number of calls to the
broken-in-Tahoe runSheetModalForWindow

2025-09-27: runSheetModalForWindow seems to be completely
broken (keyboard shortcuts don't work) so stop using it in
password manager

2025-09-27: Prevent a NSScrollView bug in Tahoe from
blurring the top of a split pane after moving it to a window

2025-09-27: Make color of split pane drop target
configurable

2025-09-27: Add advanced settings to open files in split
panes. Issue 12398

2025-09-26: Include code in XTGETTCAP errors. Issue 12488

2025-09-26: Update ColorPicker UI for Tahoe

2025-09-26: Turn on NSTimer-based cadence by default for
macOS 26 for issue 12415. This risks a reprise of the
problem fixed by 4d0ab1ec751472faca824c534cca3d31dba916d6,
but since GCD is getting starved and the NSTimer might not
(and the use of GCD to kick off token execution is no longer
relevant), it seems like a good idea.

2025-09-26: Turn on NSTimer-based cadence by default for
macOS 26 for issue 12415. This risks a reprise of the
problem fixed by 4d0ab1ec751472faca824c534cca3d31dba916d6,
but since GCD is getting starved and the NSTimer might not
(and the use of GCD to kick off token execution is no longer
relevant), it seems like a good idea.

2025-09-26: Turn off autofill heuristic controller. Issue
12415

2025-09-26: Fix crashes where browserViewController is nil

2025-09-26: Don't try to sell the builtin browser when
downloading the AI plugin because people get confused and
install the browser plugin instead

2025-09-26: Make triggers panel resizable and show a message
if no trigger is selected. Issue 12494

2025-09-26: Don't return URL results in open quickly if the
query starts with / because it hides the tips

2025-09-26: Fix the test for whether dynamic profiles should
ignore their inherited 'use separate colors for light and
dark mode' setting. Issue 12258

2025-09-26: Allow command-changed notifications in soft
alternate screen mode because some users set up prompt
triggers in tmux and want auto command completion. Issue
12427

2025-09-26: Keep chat list item blue even when not first
responder

2025-09-26: Update chat UI for Tahoe and fix various UI
bugs.

2025-09-25: Fix excessive logging

2025-09-25: Fix turning off proxy in settings. Issue 12491

2025-09-25: Update BrowserMetadata to indicate that http is
now supported. I think it was only https because I hadn't
discovered that you can turn off ATS just for webviews when
that was written.

2025-09-25: Add context menu items to open a url in a split
pane

2025-09-25: Add API to test if a URL would be locally
openable

2025-09-25: Add the ability to open a url in a tab/split,
but don't use it yet

2025-09-25: Dedup urls in open quickly

2025-09-24: Distinguish main from alternate menu items in
open quickly

2025-09-24: Update open quickly to use glass effects

2025-09-24: Fix alignment bug in open quickly ui

2025-09-24: Fix build break

2025-09-24: Add a button to locate the browser plugin.

2025-09-24: Fix some bugs in the triggers settings UI. Issue
12437

2025-09-24: Fix add/remove APS rule buttons in settings.
Issue 12438

2025-09-24: Add AI proxy support

2025-09-24: Get rid of SDK 26 conditional compilation. Add
setting to use sequoia-style tabs in tahoe for testing
purposes. Fix a bug where the add tab and overflow buttons
were missing pre macOS 26. Issue 12442

2025-09-24: Draw cursor guide under text if alpha is high.
Issue 12436

2025-09-23: Fix scrolling behavior and bottom margin of open
quickly. Issue 12432

2025-09-23: Fix audio muting to work on
https://archillect.com/tv. Issue 12429

2025-09-23: Disable parallel tool use by Claude until I have
time to implement it. Issue 12422

2025-09-23: Handle Tahoe's larger i-beam cursor frame
correctly. The hotspot was wrong since I assumed a given
size. I think it's safe to say the hotspot is just in the
middle. Issue 12419

2025-09-23: Make min distance for cursor movement animation
configurable for issue 9627

2025-09-23: Add an option to respect symbolic hotkeys like
control-f2 to open the app menu. Issue 12414

2025-09-23: Fix a bug where the AI API key text field didn't
accept keyboard shortcuts

2025-09-23: Fix up prompt marks' outputStart when resizing

2025-09-23: Use outputStart when getting the range of a
command mark's output instead of using the interval itself.
This fixes issue 12445 with two line prompts selecting part
of the prompt

2025-09-23: Fix a bug where aborting a command because of
FTCS sequences would leave a bogus screen mark in the mark
cache

2025-09-23: Add more debug logging for prompt marks

2025-09-23: Reuse prompt marks. You could get a dup by
CurrentDirectory followed by FTCS A. Fixes a bug where copy
output got confused.

2025-09-23: On FTCS C if the cursor is not on the first
column, assume output begins at the start of the next line

2025-09-23: Add debug logging to VT100ScreenMark

2025-09-23: Fix a bug where selecting a command's output
selected full lines rather than the actual range with proper
x coordinates

2025-09-22: Terminate browser sessions hard so audio doesn't
keep playing after close. Issue 12446

2025-09-22: Fix a bug where capital letters never matched in
open quickly

2025-09-22: Fix settings search when browser profiles are
disallowed to not return those results

2025-09-22: Don't crash at startup if the homedirectory
dotdir can't be determined

2025-09-22: Don't try to discover the XDG_CONFIG_HOME
because it can easily hang during startup. Issue 12439

2025-09-22: Update Sparkle for better button spacing in
Tahoe

2025-09-22: Tweak padding in Codecierge for Tahoe

2025-09-22: For DeepSeek nonstreaming responses try Chat
Completions first, then fall back to Llama. A comment in
issue 11109

2025-09-22: If no logging folder is specified use the home
directory. Fix a bug where the log directory warning image
was not visible. Issue 12345

2025-09-22: Make ligature warning separate for nonascii and
hide it if bidi is enabled. Issue 12455

2025-09-22: When a control in settings is missing, check the
app's code signature

2025-09-22: Fix password manager to make controls clickable
in Tahoe. Issue 12450

2025-09-22: Parse errors in streaming responses in OpenAI
Responses protocol. Issue 12458

2025-09-22: Adjust how non selected colored tahoe tabs are
drawn to make it clear which is selected. Issue 12453

2025-09-22: Reduce size of saved state with browser contents

2025-09-22: Fix a bug where saving an arrangement with
content didn't work. Issue 12459

2025-09-19: Add move tab to new window menu item. Inspired
by pr 521 by cbowns

2025-09-19: Add browser triggers that inject JS

2025-09-19: Fix release icon

2025-09-19: Fix a bug where we make the browser view first
responder before it's in the view hierarchy

2025-09-19: Add a missing iife call

2025-09-19: Log evaluated js

2025-09-19: Delete some leftover rust adblock code that
broke CONNECT proxy support

2025-09-19: Fix auto layout hell when adding a browser split
pane which prevented the window from becoming narrower. I
don't know why this fix works but I'm grateful for it
nonethe less. I did try literally everything else: making
all the auto resizing masks [.width,.height], setting
.translatesAutoResizingMaskToConstraints=false on
everything, and even hackily removing constraints. None of
this did a damn thing. NSSplitView turns on
translatesAutoResizingMaskToConstraints on its views and
also changes their autoresizing masks to
[.maxWidth,.maxHeight]. I tried hacking around that but that
didn't work either. I also tried interposing a view that
uses auto layout intentionally to allow arbitrary resizing
but that still had no effect. It seems like the bad
autoresizing mask->constraint translation happens instantly
everywhere, so things like the window title constrain the
window's size because the translation is done more or less
incompetently. I still do not understand why it constrained
the window's minimum width but not its maximum. As far as I
can tell it is impossible to analyze in any meaningful way.
With as much sincerity as I can muster, fuck auto layout.

2025-09-19: Fix crash when resizing when a command range is
invalid. This is not a good fix, just a band aid

2025-09-19: Improve iterm_recursiveDescription to show auto
resizing mask

2025-09-19: Try to delay crashing when the pw manager's xib
is broken

2025-09-18: Remove unneeded message in release notes

2025-09-18: Rebuild libsixel

2025-09-18: Fix release_stable to actually build

2025-09-18: Rebuild deps with Xcode 26.0

2025-09-18: Fix crash in browser instant replay when a
window has a non-UInt32 window number

2025-09-18: Make ClosedRange.init? safer when given insane
inputs

2025-09-18: Fix buttons in profiles window for Tahoe

2025-09-18: Avoid creating a Task in deinit

2025-09-18: Fix a bug where the cursor jumps to the end
after editing an AI prompt

2025-09-18: Fix crash in SwiftyMarkdown with unterminated
front matter

2025-09-18: Show a message when the daemon executable is
missing from the app bundle

2025-09-18: Fix crash on macOS 15 when JS returns undefined

2025-09-18: Fix a bug where in tahoe tabbar icons could be
the wrong size

2025-09-17: Use the correct profile when restoring orphans.
Fixes a crash when there is no default profile

2025-09-17: Remove files that should not have been added in
the first place

2025-09-16: Fix title of command palette screen in
onboarding window

2025-09-16: Use date instead of counter for default
arrangement name

2025-09-16: Fix a bug in decoding kitty images in streaming
mode where trailing =s are mottied in base64. Issue 11766
comment

2025-09-16: Update build scripts to specify macOS 12.4

2025-09-16: Fix a bug whre iTermBrowserDownload would claim
to be an upload. Issue 12410

2025-09-16: Implement file/shm sources for kitty images.
Issue 11766

2025-09-16: Rebuild deps with xcode 26 rc

2025-09-13: If DECSC was never called then DECRC should not
update wraparound or unicode version. Issue 12402

2025-09-13: Add setting to control whether modifier
remapping is done globally.

2025-09-12: 3.6.0

2025-09-12: Rebuild bindeps with RC xcode 26

2025-09-12: Improve read web page tool

2025-09-12: Fix compile time error in macos 26

2025-09-12: Update tips of the day

2025-09-11: Hide transparency and blur settings for browser
profiles

2025-09-11: When you switch a profile to browser mode turn
on favicon

2025-09-11: Make ssh > Download Files properly disallow
localhost from the file picker

2025-09-11: Prevent a crash when a mark's prompt range isn't
valid

2025-09-11: Fix a bug where the smart selection playground
wouldn't highlight the laste character

2025-09-11: Fix a bug where cmd-clicking on a link didn't
open the clicked on url

2025-09-11: Remove subpixel AA from UI

2025-09-11: Fix a bug where page zoom was stored incorrectly
in FontTable

2025-09-11: Make ssh > download file use the downloads menu
for its downloaded file

2025-09-11: Remove dead code

2025-09-10: Optimize menu tip images

2025-09-10: Improve main menu icons

2025-09-10: Only add main menu icons in Tahoe

2025-09-09: Specify a type annotation to quell warnings

2025-09-09: Add SDK checks

2025-09-09: Fix warning

2025-09-09: Add nullability annotations

2025-09-09: Fix a bug where the message table was not
created

2025-09-09: Fix macos 26 ifdefs

2025-09-09: Update Sparkle UI for Tahoe

2025-09-09: Fix a bug where moving a session could cause
unexpected reordering. Issue 12397

2025-09-09: fix build on xcode 15, add AppIcon

2025-09-09: Ensure tmux profile is not a browser

2025-09-09: Fix crashes

2025-09-09: Fix crash when saving scroll position

2025-09-09: Use resizeSubviewsWithOldSize instead of
viewDidLayout in iTermMiniSearchFieldViewController to try
to fix a crash

2025-09-09: Fix data race on AI NSURLSessionDataTask

2025-09-09: Don't use the crashy javascript evaluation
methods

2025-09-09: Close file descriptors only after canceling
dispatch sources

2025-09-09: Cancel dispatch sources when deallocing
iTermFileDescriptorMultiClientState to try to fix crash 'BUG
IN CLIENT OF LIBDISPATCH: Unexpected EV_VANISHED (do not
destroy random mach ports or file descriptors)'

2025-09-09: Fix crash when lineheight is tiny causing
integer overflow when finding visible range

2025-09-09: Get it building on Xcode 15

2025-09-09: Never show a subtitle in a compact themed fake
title bar. In settings, require that you enable a tall tab
bar to have subtitles when theme is compact

2025-09-09: Update interface builder files for tahoe control
sizes, except the main settings panels which I configured to
use the old sizes because fml

2025-09-09: Fix position of add-tab button in yosemite style
tabbar

2025-09-09: Use compact control size metrics in settings

2025-09-09: Fix a bug where fake window title labels didn't
measure their sizes correctly because _scratch was nil

2025-09-09: Same for open panels. Also fix a bug in uploads
where we'd check if the file exists locally and offer to
rename it

2025-09-09: Make save panel open system panel first and add
accessory buttons to switch between system and ssh panels

2025-09-09: Improve ssh open panel on macOS 26. It kinda
sucks and I don't think the AppKit APIs will let me make it
look right

2025-09-09: Icon for browser plugin

2025-09-09: Revert "Use whizzy liquid glass for find panel"

This reverts commit
cbb072bb80a07b1ab9794a1ac421dd87b8012c18.

I'm reverting this because NSGlassEffectView uses auto
layout and there doesn't seem to be any way to prevent it.
This posions the whole window, preventing you from resizing
it and spewing errors about conflicting constraints.

The ominous prophecy in commit
c587890d84c11bf5bc20d2160a5c99401bd383d3 rears its head.

2025-09-09: Fix a bunch of ugly things with tabbars in Tahoe

2025-09-09: Use whizzy liquid glass for find panel

2025-09-09: Fix uninitialize value

2025-09-09: Rebuild deps with Xcode 26 beta 7

2025-09-09: Use liquid glass icon

2025-09-09: New app icon design

2025-09-09: Fix wrong size for minimal theme horizontal
tabbars

2025-09-09: Try to disable tahoe's chunky controls in
settings, but I don't think it did anything

2025-09-09: Add icons to all top-level menu items

2025-09-09: Fix various bugs in tahoe tab bar and implement
high contrast themes for tahoe

2025-09-09: Tahoe tab bar dev

2025-09-09: Start implementing tahoe-style tab bar

2025-09-09: Add PSMTahoeTabStyle

2025-09-09: Try to fix Google not working

Really delete good-adblock-rust

Really remove swift-nio

Navigation succeeds

Working with real proxy

Working with real proxy

IT WORKED

Works with iTermBrowserWebView

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

Works

works

works

2025-09-09: Fix issues with beta xcode build

2025-09-09: Fix wrong number of args in DLog

2025-09-09: Build deps with beta xcode

2025-09-09: Make rustup path  more specific

2025-09-09: Banish ld_classic, fix path to rust

2025-09-09: Update libsixel

2025-09-07: Finish implementing conversation forking

2025-09-06: Add conversation forking to AI chat. Resend the
whole conversation when the system messsage changes

2025-09-06: Fix lookups of profile row and columns that
don't fall back to default values

2025-09-06: Change the test the open quickly uses to decide
whether to open a url in the current session or a new tab.
The profile cannot be trusted.

2025-09-06: Fix a bug when a profile lacks a key mapping
dictionary that crashed on entering tmux integration

2025-09-06: Fix PTYSession.isBrowserSession to not go off
its profile because that can be a lie (you could change the
profile with a terminal session already open)

2025-09-06: Remove user state file

2025-09-06: Add button to locate browser plugin from
settings

2025-09-05: Use a plugin to enable the browser functionality

2025-09-05: Don't copy trigger performance stats into shared
model when you click 'copy current settings to selected
profile' in edit session

2025-09-05: Reduce logging verbosity of find on page

2025-09-05: Offer to link current session in ai chat when
opening window

2025-09-04: Provide session state eagerly in AI chat when
permission is 'always'

2025-09-04: Reduce performance hit when we don't get FTCS B
or C. Issue 12391

2025-09-04: Fix a bug where accessibilityHelperSelectedRange
wrongly returned coordinates relative to the mutable area.
Issue 11432

2025-09-02: Add welcome page

2025-09-02: Browser onboarding

2025-09-02: Make audio detection more robust

2025-09-02: Add claude rules

2025-09-02: Rebuild character set data for current unicode

2025-09-02: Don't access trigger histograms from main thread

2025-09-02: Make 'remember frames' a first class citizen for
issue 12395

2025-09-02: Remove some incomprehensible logic that dates
back to 2009 (commit ed38bb49b in the old-iterm repo) that
tweaked the Y origin of windows whose frames were saved by
the difference in height between the default frame and then
restored frame. That code was ported over but I never
understood the rationale, and after staring at it for a
while I still don't understand it. Perhaps it was to hack
around some bug in an earlyish version of macOS? If you're
gonna save frames, you should restore them as they were
saved is the new rationale, so at least there is one now.
This was inspired by issue 12395 but it doesn't fix their
problem, which is that auto frame restoration surprisingly
causes the desired size in the profile to be ignored
sometimes. I have never loved auto frame restoration for
this reason but I am reluctant to eliminate it because I'm
sure some people expect it to continue working as it always
has.

2025-09-01: Update unicode building scripts

2025-08-28: Ensure Conductor callbacks never get run more
than once

2025-08-28: Show performance stats for triggers in Edit
Session

2025-08-27: Fix warning

2025-08-27: Ensure out-of-selected-command-range search
results are not used. This can happen on findNext which
searches forwards, and the algorithm in LineBuffer is not
prepared to exclude those results. At some point I need to
fix it in LineBuffer which will be more efficient but I
haven't the time now

2025-08-27: Show a warning in dropdown find view that search
is restricted to a line range. Issue 12388

2025-08-27: Fix a bug where navigating to a split pane by
numeric shortcut did not make it visible when another pane
was maximized. Issue 12389

2025-08-26: Improve help text for key binding actions that
are perenially confusing. Fix a bug where the help button
was clipped. Issue 6394

2025-08-26: Provide detailed stats on trigger performance
when they are detected to be slow.

2025-08-20: Automatically 'keep both' for browser downloads
because webkit cancels the download if the destination
exists.

2025-08-19: Use ssh save panel for exporting special
exceptions

2025-08-19: Use ssh save panel for export snippets

2025-08-19: Use ssh save panel for export actions

2025-08-19: Use ssh save panel for exporting color presets

2025-08-19: Make keybinding export use the new panel. Ensure
we use the fallback version everywhere

2025-08-19: Fix various bugs with save panels. Add toggle
show hidden files shortcut. When writing a save item to
localhost don't treat it as an upload. Use ssh save panel
for attributed string saver

2025-08-19: Make save image use ssh save panel. Use upload
instead of replace for ssh panel so it doesn't bog down the
connection

2025-08-19: Port save selection to use my save panel

2025-08-19: Update iTermSavePanel to use the modern save
panel, which allows saving to ssh hosts.

2025-08-18: Use ssh panel for importing snippets

2025-08-18: Use ssh panel for importing actions

2025-08-18: Use ssh panel for import color presets

2025-08-18: Add ssh panel for importing profiles. Change the
panel to have a preferred SSH identity

2025-08-18: Use ssh compatible open panel for importing
keymaps

2025-08-18: Work around an asyncio bug that made framer
commands appear to fail

2025-08-18: Add a couple ssh file panels. Fix bugs in ssh
recovery (commands before reset could have their responses
confused with reset's response, so make reset respond with a
secret code; add a backward compatibility code path for
recovery of existing framers)

2025-08-18: Move a couple places over to the ssh file
picker. Fix a bug where recovered conductors didn't know the
remote home directory. Add support for single selection in
thef ile picker

2025-08-18: Fix wrong column used when saving a chat

2025-08-18: Refactor chat agent. Fix a few bugs. Improve
prompt when a file is attached

2025-08-18: Refactor RemoteCommand

2025-08-17: Add model selector to chat window. Improve
status updates and show reasoning updates

2025-08-16: Fix selection of most recent chat when it is
empty (but contains invisible messages like setting
permissions)

2025-08-16: Add a stop button to ai chat. Fix deleting
messages after editing

2025-08-16: remove find highlights when closing find panel

2025-08-15: Fix named marks bugs.

2025-08-14: Remove adblock rust code and proxy. It's not
practical because it needs a root cert, doesn't actually
know what requests are for, and is 100 megs.

2025-08-14: Load hudsucker_ff with dlopen

2025-08-14: Don't mute audio if a video without an audio
track is playing

2025-08-14: Add multiple selection and undo support to smart
selection actions settings UI

2025-08-14: Revamp smart selection action settings UI

2025-08-14: Fix autofill/pw manager button location. Fix an
issue where CSP prevented find on page highlights from being
visible

2025-08-14: Get action shortcuts working in browser

2025-08-14: Fix test build error

2025-08-14: Reduce logging verbosity

2025-08-14: Reduce logging verbosity and add logs to
scripting console

2025-08-13: Ensure browser sessions don't warn about being
short-lived

2025-08-13: Keep crazy things from happening with Python API
and browser sessions

2025-08-13: Fix iTermSlider's text field when control
editing ends if it is out of bounds

2025-08-13: Make iTermSlider ignore illegal values during
text editing

2025-08-13: Avoid splitting browser sessions to be too small

2025-08-13: Allow http for quicklook

2025-08-13: Fix up responder chain when browser is moved to
own window

2025-08-13: Fix a bug in saving appends to chat message to
db

2025-08-13: Fix base64 pretting printing for when full lines
are selected and endX is 0

2025-08-13: Update onboarding for 3.6

2025-08-13: Add a new setting to disable window resizing
from inactive sessions, which defaults to on. Mitigates an
nvim bug when there are two nvims in different tabs and they
get into a window resizing loop. Issue 12324

2025-08-12: Revamp graph discovery and find on page. Add
editing detector.

2025-08-11: Fix time travel in AI conversations for
Responses API, which uses responseID rather than re-sending
the whole conversation

2025-08-11: Enable snippets filter in settings for web
profiles

2025-08-11: Search recent visits for open quickly. Make
migrations happen in transactions. Reduce logging verbosity

2025-08-11: ARCify iTermController to fix a leak of sessions

2025-08-11: Reduce composer log level

2025-08-11: Add iterm2-ssh URLs that let you view files
hosted on a host you are SSHed to with SSH integration

2025-08-11: Password manager improvements for browser

2025-08-11: Remove print statement

2025-08-11: Fix bugs in JSONSchema with nested types and
arrays

2025-08-09: Use a separate password manager instance for the
browser

2025-08-09: Fix leftover debug code

2025-08-09: Quiet some very loud logging

2025-08-09: Add advanced setting to avoid shrinking tmux
windows by less than one cell. Issue 9480

2025-08-09: refactor fitWindowToTabSize:preferredHeight:

2025-08-08: Allow filtering on regexes. Fix a bug where a
divorced synthetic session had the same guid as its live
session, causing a crash if you open Edit Session on the
synthetic one. Issue 12367

2025-08-08: Make it possible to forget the 'open links
in-app' setting. Issue 12368

2025-08-08: Add title to tab in applescript. shh don't tell
anyone I don't want to support applescript

2025-08-08: Fix typo. Issue 12372

2025-08-08: Make AI timeout configurable. Issue 12374

2025-08-08: Add setting to wrap dropped file names in double
quotes. Issue 12375

2025-08-08: Hide browser profiles and refuse to enter
browser mode when browser profiles are disabled

2025-08-08: Add GPT 5 models

2025-08-08: Fix a bug where spacebar stopped working after
instant replay of browser

2025-08-07: Hide certain tools from the toolbelt when the
current session is a browser since they don't make sense

2025-08-07: Support 'clear instant replay' in browser

2025-08-07: PRevent filter. Fix crash on set mark in browser

2025-08-07: Disable convert match to selection in browser
since it can't have multiple selections

2025-08-07: Fix cmd-e in browser

2025-08-07: Get navigation shortcuts working in browser

2025-08-07: Make console.debug work

2025-08-07: Fix bug with text nodes that have block siblings
not being searchable

2025-08-07: Fix some idiotic signing issue

2025-08-07: Don't add copy button until it is needed

2025-08-07: Don't add copy mode cursor before copy mode is
used

2025-08-07: Fix find on page to work with frames

2025-08-05: delete dead code

2025-08-05: Move reader mode into defaultClient

2025-08-05: Move local pages into page contentworld and
unregister them on navigation

2025-08-05: Improve find on page to handle css defined
blocks and include the root element as a block

2025-08-05: Improve favicon support to handle scalable and
dark/light mode

2025-08-05: Fix a bug where there could be an out of date
favicon

2025-08-05: Fix when two webviews have the same
configuration

2025-08-05: Always leave room for favicon in url bar. Never
leave double room

2025-08-04: Fix wrong left inset of text in urlbar

2025-08-04: Fix wrong size icon in minimal fake titlebar

2025-08-04: Fix layout issues in toolbar

2025-08-04: Fix light/dark mode for url bar

2025-08-04: Update code to use SF symbols enums

2025-08-04: Fix some bugs in SFSymbolEnum

2025-08-04: Add SFSymbolEnum

2025-08-04: Show indicators in web toolbar

2025-08-04: Move web menu to be after session instead of
after Window

2025-08-04: Drop intermediate searches

2025-08-04: Hide search results when closing find panel

2025-08-04: Mute audio automatically

2025-08-04: Move as much as possible into defaultClient
world. Remove unneeded availability annotations

2025-08-04: Fix vertical alignment of url text field

2025-08-03: Rework how browser triggers function. Add
hyperlink trigger. Update UI

2025-08-03: Add browser highlight trigger. Fix bugs in add
trigger vc.

2025-08-03: Add trigger support for browser

2025-08-02: Store match type in trigger dict and fix UI bugs

2025-08-02: Rewrite add triggers to not use xib

2025-08-02: Fix bury for browsers

2025-08-02: Place popups on the bottom center of browser
window

2025-08-02: Add support for autofill menu item in browser

2025-08-02: Disable coprocess menu item for browers session

2025-08-02: Instant replay for web browser
